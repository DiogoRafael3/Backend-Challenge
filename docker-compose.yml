version: '3.9'

services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
    image: 'meowtobot/challenge'
    networks:
      - stack
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=challenge
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    volumes:
      - ./logs/:var/log

  grafana:
    image: grafana/grafana:10.0.10
    container_name: grafana
    volumes:
      - ./configs/grafana/datasource.yml:/etc/grafana/provisioning/datasource.yml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - stack
  loki:
    image: grafana/loki:2.8.0
    container_name: loki
    network_mode: host
    volumes:
      - ./loki/data:/loki
      - ./configs/loki/loki.yml:/etc/loki/local-config.yml
    ports:
      - "3100:3100"
  promtail:
    image: grafana/promtail:2.8.0
    container_name: promtail
    command: -config.file=/etc/promtail/promtail.yml
    volumes:
      - ./configs/promtail:/etc/promtail/
      - ./logs/:/var/log/
    ports:
      - "9080:9080"
    networks:
      - stack
  db:
    image: postgres:13
    networks:
      - stack
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=challenge
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./postgres/data/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
networks:
  stack:
    driver: bridge